package Ch02Su;


//CPU는 가산회로에 존재 가산회로에 의해 가산처리(+)를 할 수 있다?  O
//CPU는 감산회로가 존재서 감산회로에 의해 감산처리(-)를 할 수 있다? X

// 보수개념을 도입해서 사용자가 뺄셈요청시 덧셈으로 치환하여 뺄셈과 동일한 결과값을 전달해준다
// 나머지 수를 더해서 ...???
// 10 - 3 = 7 
// 10 + 7 = 17 -> 1을 버리고 7
// 75 - 32 = 43
// 75 + 68 = 143 -> 1을 버리고 43
// 777-222 = 555
// 777+778 = 1555 -> 1을 버리고 555

// 5 - 5 
//
// 00000101 = 5
// 11111010 =    (1의 보수)
// 11111011 = -5 (5에 대한 2의 보수)
// ------------------------
//100000000 = 0   8비트를 벗어난 1을 버림
//
// 2 보수값 변환되었을 때 왼쪽 끝비트를 부호 비트로 해석합니다.
//왼쪽 끝 비트가 0이라면 양수
//왼쪽 끝 비트가 1이라면 음수


public class C03음의정수 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.printf("%d\n", (byte)(0b11111010)); //안배운 것.		
		
	}

}


	// [문제]
	// 10진수		->		2진수
	// 11			->		00001011
	// -11			->		11110101
	// 111			->		01101111
	// -111			->		10010001
	// 96			->		01100000
	// -96			->		10100000

	// [문제]
	// 2진수			->		10진수
	//10001010		->		-128 +2+8 = -118
	//11000101		->		-128 +64+4+1 = -59
	//01110101		->		64+32+16+4+1 = 117
	//11001100		->		-128 +64+8+4 = -52

	//00000011 = 0